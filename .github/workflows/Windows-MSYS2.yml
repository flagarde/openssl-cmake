name: Windows MSYS2

env:
  CMAKE_VERSION: 3.16.x
  CMAKE_BUILD_TYPE: Release
  CMAKE_BUILD_PREFIX: "./build"
on:
    push:
    pull_request:

jobs:
  # Checkout apply clang-format and upload artifact
  build:
    name: "Build"
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include: [
          { msystem: MINGW64, toolchain: mingw-w64-x86_64-toolchain, cc: gcc, cxx: g++ },
          { msystem: CLANG64, toolchain: mingw-w64-clang-x86_64-toolchain, cc: /clang64/bin/clang.exe, cxx: /clang64/bin/clang++.exe },
        ]

    steps:

    - name: Checkout
      uses: actions/checkout@v2.3.4

    - name: Install MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MSYS
        path-type: minimal
        release: true
        update: true
        install: git msys2-devel base-devel cmake binutils ${{ matrix.toolchain }} mingw-w64-ucrt-x86_64-toolchain

    - name: Configure
      env:
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}
      run: cmake -S . -B ${{ env.CMAKE_BUILD_PREFIX }} -D CMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} -D BUILD_TESTS=OFF
      shell: msys2 {0}

    - name: Build
      run: cmake --build ${{ env.CMAKE_BUILD_PREFIX }} --config ${{ env.CMAKE_BUILD_TYPE }} --parallel 2
      shell: msys2 {0}

    - name: Run tests
      working-directory: ${{ env.CMAKE_BUILD_PREFIX }}
      run: ctest -C ${{ env.CMAKE_BUILD_TYPE }} -j2 -VV --output-on-failure
      shell: msys2 {0}
